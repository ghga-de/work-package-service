{
  "title": "ModSettings",
  "description": "Modifies the orginal Settings class provided by the user",
  "type": "object",
  "properties": {
    "work_packages_collection": {
      "title": "Work Packages Collection",
      "description": "The name of the database collection for work packages",
      "default": "workPackages",
      "env_names": [
        "wps_work_packages_collection"
      ],
      "type": "string"
    },
    "work_package_valid_days": {
      "title": "Work Package Valid Days",
      "description": "How many days a work package (and its access token) stays valid",
      "default": 30,
      "env_names": [
        "wps_work_package_valid_days"
      ],
      "type": "integer"
    },
    "work_package_signing_key": {
      "title": "Work Package Signing Key",
      "description": "The private key for signing work order tokens",
      "example": "{\"crv\": \"P-256\", \"kty\": \"EC\", \"x\": \"...\", \"y\": \"...\"}",
      "env_names": [
        "wps_work_package_signing_key"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "db_connection_str": {
      "title": "Db Connection Str",
      "description": "MongoDB connection string. Might include credentials. For more information see: https://naiveskill.com/mongodb-connection-string/",
      "example": "mongodb://localhost:27017",
      "env_names": [
        "wps_db_connection_str"
      ],
      "type": "string",
      "writeOnly": true,
      "format": "password"
    },
    "db_name": {
      "title": "Db Name",
      "default": "work-packages",
      "env_names": [
        "wps_db_name"
      ],
      "type": "string"
    },
    "download_access_url": {
      "title": "Download Access Url",
      "description": "URL pointing to the internal download access API.",
      "example": "http://127.0.0.1/download_access",
      "env_names": [
        "wps_download_access_url"
      ],
      "type": "string"
    },
    "auth_key": {
      "title": "Internal public key",
      "description": "The GHGA internal public key for validating the token signature.",
      "example": "{\"crv\": \"P-256\", \"kty\": \"EC\", \"x\": \"...\", \"y\": \"...\"}",
      "env_names": [
        "wps_auth_key"
      ],
      "type": "string"
    },
    "auth_algs": {
      "title": "Auth Algs",
      "description": "A list of all algorithms used for signing GHGA internal tokens.",
      "default": [
        "ES256"
      ],
      "env_names": [
        "wps_auth_algs"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "auth_check_claims": {
      "title": "Auth Check Claims",
      "description": "A dict of all GHGA internal claims that shall be verified.",
      "default": {
        "name": null,
        "email": null,
        "iat": null,
        "exp": null
      },
      "env_names": [
        "wps_auth_check_claims"
      ],
      "type": "object"
    },
    "auth_map_claims": {
      "title": "Auth Map Claims",
      "description": "A mapping of claims to attributes in the GHGA auth context.",
      "default": {},
      "env_names": [
        "wps_auth_map_claims"
      ],
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "host": {
      "title": "Host",
      "description": "IP of the host.",
      "default": "127.0.0.1",
      "env_names": [
        "wps_host"
      ],
      "type": "string"
    },
    "port": {
      "title": "Port",
      "description": "Port to expose the server on the specified host",
      "default": 8080,
      "env_names": [
        "wps_port"
      ],
      "type": "integer"
    },
    "log_level": {
      "title": "Log Level",
      "description": "Controls the verbosity of the log.",
      "default": "info",
      "env_names": [
        "wps_log_level"
      ],
      "enum": [
        "critical",
        "error",
        "warning",
        "info",
        "debug",
        "trace"
      ],
      "type": "string"
    },
    "auto_reload": {
      "title": "Auto Reload",
      "description": "A development feature. Set to `True` to automatically reload the server upon code changes",
      "default": false,
      "env_names": [
        "wps_auto_reload"
      ],
      "type": "boolean"
    },
    "workers": {
      "title": "Workers",
      "description": "Number of workers processes to run.",
      "default": 1,
      "env_names": [
        "wps_workers"
      ],
      "type": "integer"
    },
    "api_root_path": {
      "title": "Api Root Path",
      "description": "Root path at which the API is reachable. This is relative to the specified host and port.",
      "default": "/",
      "env_names": [
        "wps_api_root_path"
      ],
      "type": "string"
    },
    "openapi_url": {
      "title": "Openapi Url",
      "description": "Path to get the openapi specification in JSON format. This is relative to the specified host and port.",
      "default": "/openapi.json",
      "env_names": [
        "wps_openapi_url"
      ],
      "type": "string"
    },
    "docs_url": {
      "title": "Docs Url",
      "description": "Path to host the swagger documentation. This is relative to the specified host and port.",
      "default": "/docs",
      "env_names": [
        "wps_docs_url"
      ],
      "type": "string"
    },
    "cors_allowed_origins": {
      "title": "Cors Allowed Origins",
      "description": "A list of origins that should be permitted to make cross-origin requests. By default, cross-origin requests are not allowed. You can use ['*'] to allow any origin.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "wps_cors_allowed_origins"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allow_credentials": {
      "title": "Cors Allow Credentials",
      "description": "Indicate that cookies should be supported for cross-origin requests. Defaults to False. Also, cors_allowed_origins cannot be set to ['*'] for credentials to be allowed. The origins must be explicitly specified.",
      "example": [
        "https://example.org",
        "https://www.example.org"
      ],
      "env_names": [
        "wps_cors_allow_credentials"
      ],
      "type": "boolean"
    },
    "cors_allowed_methods": {
      "title": "Cors Allowed Methods",
      "description": "A list of HTTP methods that should be allowed for cross-origin requests. Defaults to ['GET']. You can use ['*'] to allow all standard methods.",
      "example": [
        "*"
      ],
      "env_names": [
        "wps_cors_allowed_methods"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "cors_allowed_headers": {
      "title": "Cors Allowed Headers",
      "description": "A list of HTTP request headers that should be supported for cross-origin requests. Defaults to []. You can use ['*'] to allow all headers. The Accept, Accept-Language, Content-Language and Content-Type headers are always allowed for CORS requests.",
      "example": [],
      "env_names": [
        "wps_cors_allowed_headers"
      ],
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "service_name": {
      "title": "Service Name",
      "default": "wps",
      "env_names": [
        "wps_service_name"
      ],
      "type": "string"
    }
  },
  "required": [
    "work_package_signing_key",
    "db_connection_str",
    "download_access_url",
    "auth_key"
  ],
  "additionalProperties": false
}